/*
*=============================================================================
* ---- CRC16.CPP ----
* -------------------
*
*  DESCRIPCION:
*       Este m¢dulo implementa la clase CRC16, que permite generar el
*	CRC de 16 bits.
*
*  CLASES IMPLEMENTADAS:
*	Crc16
*
*=============================================================================
*/

// Includes locales
#include "crc16.h"


// Tabla CRC del polinomio del CCITT
static unsigned short crc_table[256] = {
0,
0x89,
0x112,
0x19b,
0x224,
0x2ad,
0x336,
0x3bf,
0x448,
0x4c1,
0x55a,
0x5d3,
0x66c,
0x6e5,
0x77e,
0x7f7,
0x81,
0x8,
0x193,
0x11a,
0x2a5,
0x22c,
0x3b7,
0x33e,
0x4c9,
0x440,
0x5db,
0x552,
0x6ed,
0x664,
0x7ff,
0x776,
0x102,
0x18b,
0x10,
0x99,
0x326,
0x3af,
0x234,
0x2bd,
0x54a,
0x5c3,
0x458,
0x4d1,
0x76e,
0x7e7,
0x67c,
0x6f5,
0x183,
0x10a,
0x91,
0x18,
0x3a7,
0x32e,
0x2b5,
0x23c,
0x5cb,
0x542,
0x4d9,
0x450,
0x7ef,
0x766,
0x6fd,
0x674,
0x204,
0x28d,
0x316,
0x39f,
0x20,
0xa9,
0x132,
0x1bb,
0x64c,
0x6c5,
0x75e,
0x7d7,
0x468,
0x4e1,
0x57a,
0x5f3,
0x285,
0x20c,
0x397,
0x31e,
0xa1,
0x28,
0x1b3,
0x13a,
0x6cd,
0x644,
0x7df,
0x756,
0x4e9,
0x460,
0x5fb,
0x572,
0x306,
0x38f,
0x214,
0x29d,
0x122,
0x1ab,
0x30,
0xb9,
0x74e,
0x7c7,
0x65c,
0x6d5,
0x56a,
0x5e3,
0x478,
0x4f1,
0x387,
0x30e,
0x295,
0x21c,
0x1a3,
0x12a,
0xb1,
0x38,
0x7cf,
0x746,
0x6dd,
0x654,
0x5eb,
0x562,
0x4f9,
0x470,
0x408,
0x481,
0x51a,
0x593,
0x62c,
0x6a5,
0x73e,
0x7b7,
0x40,
0xc9,
0x152,
0x1db,
0x264,
0x2ed,
0x376,
0x3ff,
0x489,
0x400,
0x59b,
0x512,
0x6ad,
0x624,
0x7bf,
0x736,
0xc1,
0x48,
0x1d3,
0x15a,
0x2e5,
0x26c,
0x3f7,
0x37e,
0x50a,
0x583,
0x418,
0x491,
0x72e,
0x7a7,
0x63c,
0x6b5,
0x142,
0x1cb,
0x50,
0xd9,
0x366,
0x3ef,
0x274,
0x2fd,
0x58b,
0x502,
0x499,
0x410,
0x7af,
0x726,
0x6bd,
0x634,
0x1c3,
0x14a,
0xd1,
0x58,
0x3e7,
0x36e,
0x2f5,
0x27c,
0x60c,
0x685,
0x71e,
0x797,
0x428,
0x4a1,
0x53a,
0x5b3,
0x244,
0x2cd,
0x356,
0x3df,
0x60,
0xe9,
0x172,
0x1fb,
0x68d,
0x604,
0x79f,
0x716,
0x4a9,
0x420,
0x5bb,
0x532,
0x2c5,
0x24c,
0x3d7,
0x35e,
0xe1,
0x68,
0x1f3,
0x17a,
0x70e,
0x787,
0x61c,
0x695,
0x52a,
0x5a3,
0x438,
0x4b1,
0x346,
0x3cf,
0x254,
0x2dd,
0x162,
0x1eb,
0x70,
0xf9,
0x78f,
0x706,
0x69d,
0x614,
0x5ab,
0x522,
0x4b9,
0x430,
0x3c7,
0x34e,
0x2d5,
0x25c,
0x1e3,
0x16a,
0xf1,
0x78,
};


// Comentarios en el correspondiente fichero .h
cCrc16::cCrc16()
{
  // Inicializamos el crc
  CrcCalculado = 0;
}

// Comentarios en el correspondiente fichero .h
cCrc16::~cCrc16()
{
   // No hacemos nada
}

// Comentarios en el correspondiente fichero .h
unsigned short cCrc16::CalculaCrc(const unsigned char* cadena,
				 const unsigned short tamano)
{
  // Contador auxiliar
  unsigned short i;

  // Inicializamos el crc;
  Inicializa();

  // Vamos a¤adiendo el crc de la cadena hasta el final
  for (i = 0; i< tamano; i++)
  {
    Anade(cadena[i]);
  }

  //Devolvemos el resultado
  return( Devuelve() );

}

/*
------------------------------------------------------------------------------
* -- cCrc16::Inicializa --
*
*  DESCRIPCION:
*       Inicializa el valor del crc
*
*  PARAMETROS
*	No tiene.
*
*  RETORNO
*       Nada
*
------------------------------------------------------------------------------
*/
void cCrc16::Inicializa()
{
  // Inicializamos el crc
  CrcCalculado = 0;

}

/*
------------------------------------------------------------------------------
* -- cCrc16::Anade --
*
*  DESCRIPCION:
*       Anade al crc calculado el crc del caracter que se le pasa como
*	par metro
*
*  PARAMETROS
*	const unsigned char caracter (IN) : car cter del que hay que a¤adir
*			el crc.
*
*  RETORNO
*       Nada
*
------------------------------------------------------------------------------
*/
void cCrc16::Anade(const unsigned char caracter)
{
   CrcCalculado = crc_table[(CrcCalculado  & 0x00ff) ^ caracter] ^ (CrcCalculado >> 8);
}

/*
------------------------------------------------------------------------------
* -- cCrc16::Devuelve --
*
*  DESCRIPCION:
*       Devuelve el crc calculado hasta el momento
*
*  PARAMETROS
*       Ninguno.
*
*  RETORNO
*       Crc calculado hasta el momento
*
------------------------------------------------------------------------------
*/
unsigned short cCrc16::Devuelve()
{
  return (CrcCalculado);
}
